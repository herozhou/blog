<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.js事件循环 on herozhou工巧</title>
    <link>http://blog.herozhou.com/tags/node.js%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</link>
    <description>Recent content in Node.js事件循环 on herozhou工巧</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 14 Oct 2017 01:37:56 +0800</lastBuildDate>
    
	<atom:link href="http://blog.herozhou.com/tags/node.js%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>process.nextTick setImmediate 的区别</title>
      <link>http://blog.herozhou.com/post/nexttick-setimmediate/</link>
      <pubDate>Sat, 14 Oct 2017 01:37:56 +0800</pubDate>
      
      <guid>http://blog.herozhou.com/post/nexttick-setimmediate/</guid>
      <description>&lt;p&gt;setImmediate和setTimeout（）是相似的，但取决于它们何时被调用，以不同的方式运行。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自顶向下 —— 事件循环的原理</title>
      <link>http://blog.herozhou.com/post/event-loop-up/</link>
      <pubDate>Sat, 14 Oct 2017 01:37:56 +0800</pubDate>
      
      <guid>http://blog.herozhou.com/post/event-loop-up/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;问题：server.listen(80) 怎么就可以监听事件了？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;自顶向下 —— listen(80)和回调函数的调用&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自底向上 —— 事件循环的原理</title>
      <link>http://blog.herozhou.com/post/english-preview/</link>
      <pubDate>Fri, 13 Oct 2017 15:43:48 +0800</pubDate>
      
      <guid>http://blog.herozhou.com/post/english-preview/</guid>
      <description>&lt;p&gt;这篇文章主要讲了 Node 中 事件循环的原理，以自底向上的角度解析。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>